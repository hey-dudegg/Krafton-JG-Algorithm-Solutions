'''
1931 회의실 배정
한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다.
각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자.
단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.
회의의 시작시간과 끝나는 시간이 같을 수도 있다.
이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.

입력
11
1 4
3 5
0 6
5 7
3 8
5 9
6 10
8 11
8 12
2 13
12 14

출력
4
'''
import sys

n = int(sys.stdin.readline())

# 회의의 시작, 끝 시간을 담을 이중 리스트
meet = [[0] * 2 for _ in range(n)] # 시작과 끝을 담기 위해 리스트 요소당 2개씩 선언
for i in range(n):
    s, e = map(int, sys.stdin.readline().split())
    meet[i][0] = s 
    meet[i][1] = e

# 요소의 1번째와 0번째를 위치를 바꾼 뒤 내림차순으로 끝나는 시간을 중심으로 정렬한다.
meet.sort(key = lambda x : (x[1], x[0]))
cnt = 1
end = meet[0][1]

# 끝나는 시간과 회의 시간의 시간을 갱신하며 카운트해준다.
for i in range(1, n): # 회의의 끝나는 시간을 탐색하기
    if meet[i][0] >= end: # i번째 회의의 시작 시간이 앞의 회의 시간과 같거나 늦는 경우
        cnt += 1
        end = meet[i][1]

print(cnt)